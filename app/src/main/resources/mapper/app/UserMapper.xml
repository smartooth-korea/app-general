<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.smartooth.app.mapper.UserMapper">


	<!-- 일반 회원 아이디 중복 체크 -->
    <select id="duplicateChkId" resultType="Integer" parameterType="String">
        SELECT COUNT(*)
		  FROM ST_USER
	    WHERE 1=1
		AND USER_ID = #{userId}
    </select>



	<!-- 회원 등록 (회원가입) -->
    <insert id="insertUserInfo" parameterType="co.smartooth.app.vo.UserVO">
    	INSERT INTO ST_USER
    	(
    		USER_NO
    		,USER_ID
    		,USER_PWD
    		,USER_NM
    		,USER_TYPE
    		,USER_BIRTHDAY
    		,USER_COUNTRY
    		,USER_STATE
    		,USER_ADDRESS
    		,USER_TEL_NO
    		,USER_SEX
    		,USER_RGST_DT
    		,PUSH_TOKEN
    		,USER_DELETE_YN
    		,USER_DELETE_DT
    		,LOGIN_DT
    		,LOGIN_CK
    	)
    	VALUES
    	(
    		#{userNo}
    		,#{userId}
    		,#{userPwd}
    		,#{userNm}
    		,#{userType}
    		,#{userBirthday}
    		,#{userCountry}
    		,#{userState}
    		,#{userAddress}
    		,#{userTelNo}
    		,#{userSex}
    		,SYSDATE()
    		,#{pushToken}
    		,'N'
    		,NULL
    		,SYSDATE()
    		,0
   		)
    </insert>



	<!-- 회원 정보 업데이트 -->
    <update id="updateUserInfo" parameterType="co.smartooth.app.vo.UserVO">
		UPDATE ST_USER
		SET  
			   USER_NM = #{userNm}
			   ,USER_BIRTHDAY = #{userBirthday}
			   ,USER_COUNTRY = #{userCountry}
			   ,USER_STATE = #{userState}
			   ,USER_ADDRESS = #{userAddress}
			   ,USER_TEL_NO = #{userTelNo}
		WHERE 1=1
		AND USER_ID = #{userId}
		AND USER_NO = #{userNo}
    </update>



	<!-- 회원 번호 (회원 번호) 생성 전 SEQ_NO 조회 -->
    <select id="selectUserSeqNo" resultType="Integer" parameterType="String">
        SELECT ${userType}_SEQ_NO
		  FROM ST_SEQUENCE
    </select>
        
    
    
    <!-- 회원 번호 (회원 번호) 생성 전 SEQ_STR 조회 -->
    <select id="selectUserSeqStr" resultType="Integer">
        SELECT SEQ_STR
		  FROM ST_SEQUENCE
    </select>
        
    
    
    <!-- 회원 번호 (회원 번호 생성 후 SEQ_NO) 업데이트 -->
    <update id="updateUserSeqNo" parameterType="String">
		UPDATE ST_SEQUENCE
		SET ${userType}_SEQ_NO  =  #{seqNo}
    </update>



    <!-- 회원 번호 (회원 번호 생성 후 SEQ_STR) 업데이트 -->
    <update id="updateUserSeqStr" parameterType="Integer">
		UPDATE ST_SEQUENCE
		SET SEQ_STR =  #{seqStr}
    </update>
    
    
    
    <!-- 로그인 회원 정보조회 -->
    <select id="selectUserInfo" parameterType="co.smartooth.app.vo.UserVO" resultType="co.smartooth.app.vo.UserVO">
         SELECT USER_NO
         			,USER_ID
				    ,USER_NM
				    ,USER_TYPE
				    ,USER_BIRTHDAY
					,USER_COUNTRY
				    ,USER_STATE
				    ,USER_ADDRESS
				    ,USER_TEL_NO
				    ,USER_SEX
				    ,DATE_FORMAT(USER_RGST_DT, '%Y-%m-%d') AS USER_RGST_DT
				    ,PUSH_TOKEN 
				    ,USER_DELETE_YN
				    ,DATE_FORMAT(USER_DELETE_DT, '%Y-%m-%d') AS USER_DELETE_DT
				    ,DATE_FORMAT(LOGIN_DT, '%Y-%m-%d') AS LOGIN_DT
				    ,LOGIN_CK
		FROM ST_USER
		WHERE 1=1
		<if test="userId != null and userId != '' ">
			AND USER_ID = #{userId}
   		</if> 
    </select>
    
    
    
    <!-- 회원 비밀번호 변경(찾기) -->
    <update id="updateUserPwd" parameterType="co.smartooth.app.vo.CalibrationVO">
		UPDATE ST_USER
		SET  
			USER_PWD = #{userPwd}
		WHERE 1=1
		AND USER_ID = #{userId}
    </update>
    
    
    
<!-- 	<delete id="deleteUser" parameterType="String"> -->
<!-- 		DELETE FROM ST_USER -->
<!-- 		WHERE 1=1 -->
<!-- 		AND USER_ID = #{userId} -->
<!-- 	</delete> -->
</mapper>